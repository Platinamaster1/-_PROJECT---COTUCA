---------------------------------------------------------Git: ------------------------------------------------------------
CONFIGURAÇÕES DO GIT:
git config --globa user.name u19168 // Define o nome do usuário do git

git config --global user.email "enzo.spinella@gmail.com" // Define o E-Mail do usuário do git

git config --global core.editor sub // Define o editor de texto padrão para o Git (Nesse caso, Sublime)

INICIALIZAÇÃO DE UM REPOSITORIO
cd exemplo // Ir até a pasta escolhida e entrar nela

git init // Inicializa o repositório e serve parar a identificação de alterações

FAZENDO ALTERAÇÕES
git status // Exibe quantos commits já foram feitos e mostra quais arquivos foram alterados

git add // O git reconhece o arquivo e deixa ele pronto para ser commitado

git commit -m "MENSAGEMMMM" // Tudo que o git tem reconhecido de que foi adicionado ou modificado, é commitado. Depois disso, não da pra dar outro git add sem uma alteração nos arquivos e etc.

VENDO LOGS
git log // Mostra todos os commits já feitos, por quem, que horas, etc.

git diff // Muito importante para se dar antes do commit

CANCELANDO ALTERAÇÕES

git checkout "Arquivo" // Cancela a sua última alteração e sai da aba do git add e git status
git reset HEAD "Arquivo" // volta a mudança que foi cancelada no checkout
// Quando você quer resetar o commit (git reset)
--Soft: Volta o commit mas deixa o arquivo com a alteração que foi feita no commit, só cancela o commit msm. (Staged) Já com git add
--Mixed: Volta o commit mas deixa o arquivo prestes a ser adicionado pelo git add (Unstaged) 
--Hard: Volta tudo. Exclue até a alteração. ( CUIDADO )

 ------------------------------------------------------------ GIT HUB: ---------------------------------------------------------------
CONECTANDO OS DOIS:
git remote add origin git@github.com:(nome da conta em que está o repositorio)willianjusten/(nome do repositório) //Conecta o repositório do git com o do git hub.
git push -u origin master (master==brench padrão) // Coloca todos os novos commits no repositório do github

PEGANDO UM REPOSITÓRIO DO GITHUB
git clone (SSH na parte do repositório) git@github.com:willianjusten/git-hub-course

BRENCHS:
git checkout -b (nome do novo brench) // Cria um novo branch
git branch// Da a lista dos brenchs
git checkout (nome do brench) // Muda para esse branch
git branch -D (nome do branch) // Exclue o branch

git merge "nome da branch que quer juntar" // Junta as duas branchs atraves de um novo commit (guarda o histórico)
git rebase "nome da branch que quer juntar" // junta as duas branchs colocando os commits da outra branch (sem ser a do master) no fim do histórico.

